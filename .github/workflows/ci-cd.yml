name: Build and Push Docker Image

on:
  push:
    paths:
      - '.github/workflows/**'
      - 'backend/src/**'
      - 'backend/build.gradle'
      - 'backend/build.gradle.kts'
      - 'backend/Dockerfile'
    branches:
      - main
    
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 21
      uses: actions/setup-java@v3
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: gradle

    - name: Build with Gradle
      run: |
        cd backend
        ./gradlew bootJar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.REPOSITORY_TOKEN }}

    - name: Extract metadata for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ghcr.io/${{ github.repository }}/ci-cd-backend
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=sha,format=long
          latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./backend  # context 디렉토리 설정
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        platforms: linux/amd64,linux/arm64
    - name: jenkins deploy
      if: success()
      uses: appleboy/jenkins-action@master
      with:
        url: ${{ secrets.JENKINS_URL }}
        user: ${{ secrets.JENKINS_USER }}
        token: ${{ secrets.JENKINS_DEPLOY_TOKEN }}
        job: ${{ secrets.JENKINS_JOB }}
    
#    - name: Trigger Jenkins Deployment
#      if: success()
#      run: |
#        curl -X POST \
#        -u ${{ secrets.JENKINS_USER }}:${{ secrets.JENKINS_TOKEN }} \
#        "${{ secrets.JENKINS_URL }}/job/deploy-ci-cd-test/buildWithParameters?token=${{ secrets.JENKINS_DEPLOY_TOKEN }}&IMAGE_TAG=${{ steps.meta.outputs.tags }}"
